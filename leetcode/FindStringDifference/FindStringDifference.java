/*
Given two strings s and t which consist of only lowercase letters.
String t is generated by random shuffling string s and then add one more letter at a random position.
Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.

idea:
typical problem using 26 characters map

similar to single number, every element appears twice except one appears once. Find that single one.
*/

public class FindStringDifference {
    public char findTheDifference(String s, String t) {
        int[] letters = new int[26];
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            letters[c - 'a']++;
        }
        
        for (int i = 0; i < t.length(); i++) {
            char c = t.charAt(i);
            letters[c - 'a']--;
            if (letters[c - 'a'] == -1) {
                return c;
            }
        }
        return 0;
    }

    // using XOR
    public char findTheDifference(String s, String t) {
        int ret = 0;
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            ret ^= (ch - 'a');
        }
        for (int i = 0; i < t.length(); i++) {
            char ch = t.charAt(i);
            ret ^= (ch - 'a');
        }

        return (char)(ret + 'a');
    }
}